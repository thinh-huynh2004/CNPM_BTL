DO $$ 
BEGIN 
  IF NOT EXISTS (
    SELECT FROM pg_database WHERE datname = 'printer-smart-db'
  ) THEN 
    CREATE DATABASE "printer-smart-db";
  END IF;
END $$;

-- Connect to the database if you're using this script externally
-- \c printer-smart-db

-- Create the custom ENUM types first
CREATE TYPE "PrinterStatus" AS ENUM ('ONLINE', 'ERROR', 'BUSY', 'OFFLINE');
CREATE TYPE "Orientation" AS ENUM ('Landscape', 'Portrait');
CREATE TYPE "PageSize" AS ENUM ('A1', 'A2', 'A3', 'A4');
CREATE TYPE "PrintType" AS ENUM ('BlackAndWhite', 'Colour');
CREATE TYPE "PrintSide" AS ENUM ('OneSide', 'TwoSide');
CREATE TYPE "FileType" AS ENUM ('DOC', 'DOCX', 'PDF');
CREATE TYPE "PrinterFileStatus" AS ENUM ('QUEUE', 'IN_PROGRESS', 'COMPLETED');
CREATE TYPE "TransactionStatus" AS ENUM ('FAILED', 'PENDING', 'SUCCESS');

-- Create the tables after the types have been defined
CREATE TABLE "SPSO" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(50),
  "last_name" varchar(50)
);

CREATE TABLE "Student" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(50),
  "last_name" varchar(50),
  "class_id" int,
  "balance" int,
  "student_id" int
);

CREATE TABLE "File" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50),
  "size" int,
  "page_num" int,
  "file_type" "FileType",
  "student_id" int
);

CREATE TABLE "PrinterFile" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "page_per_side" int,
  "start_page" int,
  "end_page" int,
  "created_at" timestamp,
  "orientation" "Orientation",
  "page_size" "PageSize",
  "copies" int,
  "print_type" "PrintType",
  "print_side" "PrintSide",
  "file_id" int,
  "printer_id" int,
  "status" "PrinterFileStatus"
);

CREATE TABLE "Transaction" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "description" text,
  "status" "TransactionStatus",
  "amount" int,
  "student_id" int,
  "created_at" timestamp
);

CREATE TABLE "Printer" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50),
  "model" varchar(50),
  "status" "PrinterStatus",
  "campus" varchar(20),
  "building" varchar(20),
  "room" varchar(20),
  "created_at" timestamp
);

CREATE TABLE "PrinterSPSO" (
  "printer_id" int,
  "spso_id" int,
  "description" text,
  PRIMARY KEY ("printer_id", "spso_id")
);

-- Add foreign key constraints
ALTER TABLE "PrinterSPSO" 
  ADD FOREIGN KEY ("spso_id") REFERENCES "SPSO" ("id");

ALTER TABLE "PrinterSPSO" 
  ADD FOREIGN KEY ("printer_id") REFERENCES "Printer" ("id");

ALTER TABLE "Transaction" 
  ADD FOREIGN KEY ("student_id") REFERENCES "Student" ("id");

ALTER TABLE "File" 
  ADD FOREIGN KEY ("student_id") REFERENCES "Student" ("id");

ALTER TABLE "PrinterFile" 
  ADD FOREIGN KEY ("file_id") REFERENCES "File" ("id");

ALTER TABLE "PrinterFile" 
  ADD FOREIGN KEY ("printer_id") REFERENCES "Printer" ("id");
